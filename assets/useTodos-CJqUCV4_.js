import{u,r as n,c as D,d as l,e as y}from"./index-bFzoaAFS.js";var r=(o=>(o.PENDING="Pending",o.IN_PROGRESS="In Progress",o.COMPLETED="Completed",o))(r||{});const m=()=>{const{state:o,dispatch:d,refreshTodos:i}=u(),T=n.useCallback(async s=>{try{const t=o.totalTodos+1,c=o.totalTodos+1e3;console.log("state",o);const e={id:Math.floor(Math.random()*(c-t+1))+t,todo:s,userId:1};d({type:"ADD_TODO",payload:{...e,inProgress:!1,status:r.PENDING}}),await D(s)}catch(t){console.error("Failed to add todo",t)}},[d]),p=n.useCallback(async(s,t,c)=>{try{const a=c;a.todo=t.todo;const e=o.todos.find(g=>g.id===s);d({type:"UPDATE_TODO",payload:{...a,inProgress:(e==null?void 0:e.inProgress)||!1,status:a.completed?r.COMPLETED:e!=null&&e.inProgress?r.IN_PROGRESS:r.PENDING}}),await l(s,t)}catch(a){console.error("Failed to update todo ",a)}},[d,o.todos]),P=n.useCallback((s,t)=>{const c=o.todos.find(e=>e.id===s);if(!c)return;const a={...c,completed:t===r.COMPLETED,inProgress:t===r.IN_PROGRESS,status:t};d({type:"UPDATE_TODO",payload:a}),l(s,{completed:a.completed}).catch(e=>{console.error("Failed to update status on API",e)})},[d,o.todos]),E=n.useCallback(async s=>{d({type:"DELETE_TODO",payload:s});try{await y(s)}catch(t){console.error("Failed to delete todo",t)}},[d]);return{todos:o.todos,isLoading:o.isLoading,error:o.error,currentPage:o.currentPage,totalTodos:o.totalTodos,pageSize:o.pageSize,addTodo:T,editTodo:p,toggleStatus:P,removeTodo:E,refreshTodos:i}};export{r as S,m as u};
